version: 2.1
defaults: &defaults
  working_directory: ~/java-tracer
  docker:
    - image: circleci/python:3.7

commands:
  install_java:
    description: "Install java 8 JDK & maven"
    steps:
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install openjdk-8-jdk
            sudo update-alternatives --config java
            sudo apt install maven

  install_java_compatabilities:
    description: "Install Scala and Kotlin"
    steps:
      - run: sudo apt-get install scala
      - run:
          command: |
            cd ..
            curl -L -o sbt.deb http://dl.bintray.com/sbt/debian/sbt-0.13.15.deb
            sudo dpkg -i sbt.deb
            sudo apt-get update
            sudo apt-get install sbt


  install_node:
    description: "Install node 10"
    steps:
      - run: curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -
      - run: sudo apt install nodejs
      - run: sudo npm install -g serverless@1.41.1


  checkout_utils:
    description: "Checkout various utilities"
    steps:
      - run:
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            cd ..
            git clone git@github.com:lumigo-io/common-resources.git
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/utils.git


  checkout_code:
    description: "Checkout code and install it"
    steps:
      - checkout
      - run:
          # Avoid annoying double runs after deploy.
          # See https://discuss.circleci.com/t/job-runs-even-when-tags-ignore-filter-is-triggered-when-combined-with-branches-only/20664
          name: Check if tagged
          command: |
            tags=$(git tag -l --points-at HEAD)
            echo "Tags $tags"
            if [[ ! -z "$tags" ]]
            then
              echo "A tagged commit, skip..."
              circleci step halt
            fi
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages

      # Download and cache dependencies
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - m2-

      - run:
          name: Install project dependencies of java tracer
          command: mvn dependency:go-offline


      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}

workflows:
  test-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
      - integration-test:
          filters:
            branches:
              ignore: master
          requires:
            - test
      - deploy:
          filters:
            branches:
              only: master

jobs:
  test:
    <<: *defaults
    steps:
      - install_java
      - checkout_code
      - run: ./scripts/checks.sh
      - run: bash <(curl -s https://codecov.io/bash)

  integration-test:
    <<: *defaults
    steps:
      - install_java
      - install_java_compatabilities
      - install_node
      - checkout_utils
      - checkout_code
      - run: sudo pip install awscli
      - run: ./scripts/ci_deploy.sh
      - run: cd ../integration-tests && npm i
      - run: sudo npm install -g recursive-install
      - run: cd ../integration-tests && ./scripts/prepare_env.sh
      - run: cd ../integration-tests && ./scripts/deploy.sh --spec java
      - run: cd ../integration-tests && export testJava=true && npm run test

  deploy:
    <<: *defaults
    steps:
      - install_java
      - checkout_utils
      - checkout_code
      - run: mvn clean install
      - run: bash <(curl -s https://codecov.io/bash)
      - run: ./scripts/bd_to_prod.sh
