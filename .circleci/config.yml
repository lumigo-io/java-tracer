version: 2.1
defaults: &defaults
  working_directory: ~/java-tracer
  docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD

commands:
  checkout_utils:
    description: "Checkout various utilities"
    steps:
      - run:
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            cd ..
            git clone git@github.com:lumigo-io/common-resources.git
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/utils.git

  checkout_integration_tests:
    description: "Checkout integration tests"
    steps:
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/integration-tests.git
  checkout_dashboard:
    description: "Checkout Lumigo Platform (dashboard)"
    steps:
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/dashboard.git
  checkout_code:
    description: "Checkout code and install it"
    steps:
      - checkout
      - run:
          # Avoid annoying double runs after deploy.
          # See https://discuss.circleci.com/t/job-runs-even-when-tags-ignore-filter-is-triggered-when-combined-with-branches-only/20664
          name: Check if tagged
          command: |
            tags=$(git tag -l --points-at HEAD)
            echo "Tags $tags"
            if [[ ! -z "$tags" ]]
            then
              echo "A tagged commit, skip..."
              circleci step halt
            fi
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages

      # Download and cache dependencies
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - m2-

      - run:
          name: Install project dependencies of java tracer
          command: mvn dependency:go-offline


      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}

workflows:
  test-deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
      - integration-test:
          filters:
            branches:
              ignore: master
          requires:
            - test
      - deploy:
          filters:
            branches:
              only: master

jobs:
  test:
    <<: *defaults
    steps:
      - checkout_utils
      - checkout_code
      - run: ./scripts/checks.sh
      - run: ../utils/common_bash/defaults/code_cov.sh

  integration-test:
    <<: *defaults
    steps:
      - checkout_utils
      - checkout_code
      - run: ./scripts/ci_deploy.sh
      - run: cd ../integration-tests && npm i
      - run: sudo npm install -g recursive-install
      - run: cd ../integration-tests && git rev-parse HEAD > ../commits && cd ../python_tracer && git rev-parse HEAD >> ../commits &&  cd ../lumigo-node && git rev-parse HEAD >> ../commits &&  cd ../java-tracer && git rev-parse HEAD >> ../commits
      - restore_cache:
          keys:
            - IT-{{ .Branch }}-{{ checksum "../commits" }}
      - run: cd ../integration-tests && ./scripts/parallel_prepare_env.sh
      - run: cd ../integration-tests && ./scripts/parallel_deploy.sh --spec java
      - save_cache:
          key: IT-{{ .Branch }}-{{ checksum "../commits" }}
          paths:
            - ../integration-tests/src/e2e-test/cypress.env.json
            - ../integration-tests/src/e2e-test/cypress/cf-stack.json
            - ../integration-tests/.env
            - ../integration-tests/.env2
            - ../integration-tests/.env3
            - ../integration-tests/.deployment_finished.env
            - ../integration-tests/.deployment_finished.env2
            - ../integration-tests/.deployment_finished.env3
      - run:
          command: cd ../integration-tests && export testJava=true && npm run test-parallel
          no_output_timeout: 30m
      - store_test_results:
          path: ../integration-tests/src/test/test-results
      - run: mkdir -p ../envs && cd ../integration-tests && cp src/e2e-test/cypress.env.json ../envs
      - run: mkdir -p ../stack && cd ../integration-tests && cp src/e2e-test/cypress/cf-stack.json ../stack
      - persist_to_workspace:
          root: ../
          paths:
            - envs/
            - stack/
            - .aws/
          
  deploy:
    <<: *defaults
    steps:
      - checkout_utils
      - checkout_code
      - run: mvn clean install
      - run: ../utils/common_bash/defaults/code_cov.sh
      - run: ./scripts/bd_to_prod.sh
